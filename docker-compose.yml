version: '3.8'

networks:
  inet:
  noinet:
    internal: true
  merchantnet:

services:
  exchange:
    container_name: exchange
    build: ./exchange
    image: "taler/exchange:latest"
    environment:
      - TALER_EXCHANGEDB_POSTGRES_CONFIG=postgres://user:pass@db-exchange/taler-exchange
      - TALER_MASTER_PUBLIC_KEY=${TALER_MASTER_PUBLIC_KEY}
      - TALER_EXCHANGE_BASE_URL=http://exchange:5890/
    networks:
      - inet
    depends_on:
      - db-exchange
    volumes:
      - ./exchange/etc/taler:/etc/taler
      - ./exchange/etc/nginx/conf.d:/etc/nginx/conf.d
      - ./exchange/signed-responses:/signed-responses
      - exchange-offline-dir:/var/lib/taler/exchange-offline
    ports:
      - "5890:5890"
      - "8081:8081"

  exchange-offline:
    container_name: exchange-offline
    build: ./exchange-offline
    image: "taler/exchange-offline:latest"
    networks:
      - noinet
    tty: true
    stdin_open: true
    stop_grace_period: 1s
    volumes:
      - ./exchange-offline/etc/taler:/etc/taler
      - exchange-offline-data:/var/lib/taler/exchange-offline

  merchant:
    container_name: merchant
    build: ./merchant
    image: "taler/merchant:latest"
    environment:
      - TALER_MASTER_PUBLIC_KEY=${TALER_MASTER_PUBLIC_KEY}
      - TALER_MERCHANT_TOKEN=bzUZQJPFne5RP2uq0IYhBXXBz9TzqVW
      - TALER_PAY_TO_URI=payto://x-taler-bank/bank:5882/Shop?receiver-name=Shop
    networks:
      - inet
      - merchantnet
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "exchange:172.17.0.1"
    depends_on:
      - db-merchant
    volumes:
      - ./merchant/etc/taler:/etc/taler
      - ./merchant/etc/supervisor/conf.d:/etc/supervisor/conf.d
    ports:
      - "8888:8888"

#  libeufin:
#    container_name: libeufin
#    build: ./libeufin
#    image: "taler/libeufin:latest"
#    networks:
#      - inet

  bank:
    container_name: bank
    build: ./bank
    image: "taler/bank:latest"
    networks:
      - inet
    ports:
      - "5882:5882"
    depends_on:
      - db-bank

  cli:
    container_name: cli
    build: ./cli
    image: "taler/cli:latest"
    networks:
      - inet
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "exchange:172.17.0.1"
    tty: true
    stdin_open: true

  fuzzer:
    container_name: fuzzer 
    build: ./fuzzer
    image: "taler/fuzzer:latest"
    networks:
      - inet
      - merchantnet
        #- exchangenet
        #    extra_hosts:
        #- "host.docker.internal:host-gateway"
        #- "exchange:172.17.0.1"
    volumes:
     - ./fuzzer/api:/home/fuzzy/api
     - ./fuzzer/results:/home/fuzzy/results
    tty: true
    stdin_open: true

  db-exchange:
    container_name: db-exchange
    build: ./db-exchange
    image: "taler/db-exchange:latest"
    command: ["postgres", "-c", "log_statement=mod"]
    networks:
      - inet
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=db
    volumes:
      - db-exchange-data:/var/lib/postgresql/data
    ports:
      - "15432:5432"
    healthcheck:
      start_period: 30s
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  db-merchant:
    container_name: db-merchant
    build: ./db-merchant
    image: "taler/db-merchant:latest"
    command: ["postgres", "-c", "log_statement=mod"]
    networks:
      - inet
      - merchantnet
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pass
    ports:
      - "17432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      start_period: 30s
      interval: 10s
      timeout: 5s
      retries: 5

  db-bank:
    container_name: db-bank
    build: ./db-bank
    image: "taler/db-bank:latest"
    command: ["postgres", "-c", "log_statement=mod"]
    networks:
      - inet
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pass
      - EXCHANGE_BANK_ACCOUNT_PASSWORD=UIakeh89!%6mcmia8)*
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      start_period: 30s
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-bank-data:/var/lib/postgresql/data
    ports:
      - "16432:5432"
  
  db-shop:
    image: mariadb 
    volumes:
      - db-shop-data:/var/lib/mysql
    restart: always
    environment:
      MARIADB_ROOT_PASSWORD: pass
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
    networks:
      - merchantnet 
    expose:
      - 3306

  shop:
    depends_on:
      - db-shop
    image: wordpress:latest
    volumes:
      #- ./shop/html:/var/www/html
      - shop-data:/var/www/html
    ports:
      - "8008:80"
    networks:
      - inet
      - merchantnet
    restart: always
    environment:
      WORDPRESS_DB_HOST: db-shop:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DEBUG: 1
  
  shop-cli:
    image: taler/shop-cli:latest
    build: ./shop-cli    
    depends_on:
     - db-shop
     - shop
    #image: wordpress:cli
    #user: xfs
    volumes:
     - shop-data:/var/www/html
     - ./shop-cli/init:/usr/local/bin/init
     - ./shop-cli/.curlrc:/var/www/html/.curlrc  
    networks:
     - inet
     - merchantnet
    environment:
      WORDPRESS_DB_HOST: db-shop:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
    extra_hosts:
      - "host.docker.internal:host-gateway"
  
volumes:
  exchange-offline-data:
  exchange-offline-dir:
  db-exchange-data:
  db-bank-data:
  db-merchant-data:
  db-shop-data:
  shop-data:
